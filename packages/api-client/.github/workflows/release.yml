name: Release

on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  test:
    name: Prepare tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build package
        run: |
          yarn install && yarn build
      - name: Test code
        run: |
          yarn test
      - name: Archive code coverage results
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report
          path: ./coverage/**/*.*
      - name: Upload build results
        uses: actions/upload-artifact@v2
        with:
          name: build-package
          path: ./lib/**/*.*
  coverage:
    name: Code coverage
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: Download a coverage artifact
        uses: actions/download-artifact@v2
        with:
          name: code-coverage-report
          path: ./coverage
      - name: Run Codecov checks
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
  release:
    name: Create Release of PR
    runs-on: ubuntu-latest
    needs: [coverage]
    outputs:
      version: ${{ steps.version.outputs.tag_name }}
    if: github.event.pull_request.merged
    steps:
      - name: Version upgrade
        id: version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: rymndhng/release-on-push-action@v0.15.0
        with:
          bump_version_scheme: patch
  publish:
    name: Publish package
    runs-on: ubuntu-latest
    needs: [release]
    if: ${{needs.release.outputs.version}} != null
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setting Node environment
        uses: actions/setup-node@v1
        with:
          registry-url: "https://npm.pkg.github.com/"
          scope: "@pondigitalsolutions"
          node-version: 12
        env:
          NODE_AUTH_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      - name: Create .npmrc
        run: |
          echo -e "//npm.pkg.github.com/:_authToken=:_authToken=$NPM_TOKEN" >> ~/.npmrc
          echo -e "@pondigitalsolutions:registry=https://npm.pkg.github.com/" >> ~/.npmrc
        env:
          NPM_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      - name: Download package from previous steps
        uses: actions/download-artifact@v2
        with:
          name: build-package
          path: ./lib
      - name: Publish
        run: |
          yarn publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.ACCESS_TOKEN }}
